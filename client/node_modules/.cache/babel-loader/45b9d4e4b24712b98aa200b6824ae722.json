{"ast":null,"code":"export const inMemoryTodoService = () => {\n  const todos = new Map();\n  return {\n    load: () => {\n      var _Array$from;\n\n      return (_Array$from = Array.from(todos.values())) !== null && _Array$from !== void 0 ? _Array$from : [];\n    },\n    create: todo => {\n      todos.set(todo._id, todo);\n    },\n    updateDone: (id, done) => {\n      const todo = todos.get(id);\n      todo.done = done;\n      todos.set(id, todo);\n    },\n    deleteDone: () => {\n      todos.forEach((todo, id, todos) => todo.done && todos.delete(id));\n    }\n  };\n};\nexport const localStorageTodoService = () => ({\n  load: () => {\n    const storageItem = localStorage.getItem(\"todos\");\n\n    if (!storageItem) {\n      return {};\n    }\n\n    const todos = JSON.parse(storageItem);\n    return Array.from(Object.values(todos));\n  },\n  create: todo => {\n    const storageItem = localStorage.getItem(\"todos\");\n\n    if (!storageItem) {\n      return;\n    }\n\n    const todos = JSON.parse(storageItem);\n    const id = Object.keys(todos).length;\n    todo._id = id;\n    localStorage.setItem(\"todos\", JSON.stringify({ ...todos,\n      [id]: todo\n    }));\n  },\n  updateDone: (id, done) => {\n    const storageItem = localStorage.getItem(\"todos\");\n\n    if (!storageItem) {\n      return;\n    }\n\n    const todos = JSON.parse(storageItem);\n    const todo = todos[id];\n    if (!todo) return;\n    todo.done = done;\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  },\n  deleteDone: () => {\n    const storageItem = localStorage.getItem(\"todos\");\n\n    if (!storageItem) {\n      return;\n    }\n\n    const todos = JSON.parse(storageItem);\n\n    for (var id in todos) {\n      if (todos[id].done) {\n        delete todos[id];\n      }\n    }\n\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }\n});","map":{"version":3,"sources":["C:/Users/alanc/Documents/Web Dev/Producktivity/client/src/services/todos-service.ts"],"names":["inMemoryTodoService","todos","Map","load","Array","from","values","create","todo","set","_id","updateDone","id","done","get","deleteDone","forEach","delete","localStorageTodoService","storageItem","localStorage","getItem","JSON","parse","Object","keys","length","setItem","stringify"],"mappings":"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","sourcesContent":["import { Todo } from \"../types\";\r\n\r\nexport const inMemoryTodoService = () => {\r\n  const todos = new Map();\r\n  return {\r\n    load: () => Array.from(todos.values()) ?? [],\r\n    create: (todo: Todo) => {\r\n      todos.set(todo._id, todo);\r\n    },\r\n    updateDone: (id: number, done: boolean) => {\r\n      const todo = todos.get(id);\r\n      todo.done = done;\r\n      todos.set(id, todo);\r\n    },\r\n    deleteDone: () => {\r\n      todos.forEach((todo, id, todos) => todo.done && todos.delete(id));\r\n    },\r\n  };\r\n};\r\n\r\nexport const localStorageTodoService = () => ({\r\n  load: () => {\r\n    const storageItem = localStorage.getItem(\"todos\");\r\n    if (!storageItem) {\r\n      return {};\r\n    }\r\n    const todos = JSON.parse(storageItem);\r\n    return Array.from(Object.values(todos));\r\n  },\r\n  create: (todo: Todo) => {\r\n    const storageItem = localStorage.getItem(\"todos\");\r\n    if (!storageItem) {\r\n      return;\r\n    }\r\n    const todos = JSON.parse(storageItem);\r\n    const id = Object.keys(todos).length;\r\n    todo._id = id;\r\n    localStorage.setItem(\"todos\", JSON.stringify({ ...todos, [id]: todo }));\r\n  },\r\n  updateDone: (id: number, done: boolean) => {\r\n    const storageItem = localStorage.getItem(\"todos\");\r\n    if (!storageItem) {\r\n      return;\r\n    }\r\n    const todos = JSON.parse(storageItem);\r\n    const todo = todos[id];\r\n    if (!todo) return;\r\n    todo.done = done;\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  },\r\n  deleteDone: () => {\r\n    const storageItem = localStorage.getItem(\"todos\");\r\n    if (!storageItem) {\r\n      return;\r\n    }\r\n    const todos = JSON.parse(storageItem);\r\n    for (var id in todos) {\r\n      if (todos[id].done) {\r\n        delete todos[id];\r\n      }\r\n    }\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}